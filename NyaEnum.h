#pragma once

#define DEVICE_COLLISION_MAX_ACCURACY				10
#define DEVICE_GADGET_MAX_DEFAULT					10000
#define EFFECT_MAX_DEFAULT							10000
#define FPS_MAX										60
//#define INTERFACE_SKILL_MAX_LV						4
#define INTERFACE_MISSION_CLEAR_DEFAULT_DRAW_X		225
#define INTERFACE_MISSION_CLEAR_DEFAULT_DRAW_Y		200
#define SCREEN_MIN_X								0
#define SCREEN_MIN_Y								0
#define SCREEN_MAX_X								850
#define SCREEN_MAX_Y								750



namespace H2NLIB
{
	//*****************
	// 入力の種類
	//*****************
	enum class eINPUT
	{ 
		enum_zero, 
		UP, RIGHT, DOWN, LEFT, Q, W, E, R, SPACE, ENTER,
		sizeof_enum, 
	};


	//**********************
	// オブジェクトの種類
	//**********************
	enum class eOBJECT 
	{
		enum_zero,
		BACK_MAP1, BACK_MAP2, BACK_MAP3, BACK_MAP4, BACK_MAP5,  
		TARGET1, TARGET2, TARGET3, TARGET4, TARGET5,
		TARGET_EFFECT1, TARGET_EFFECT2, TARGET_EFFECT3, TARGET_EFFECT4, TARGET_EFFECT5, 
		TARGET_ATTACK_EFFECT1, TARGET_ATTACK_EFFECT2, TARGET_ATTACK_EFFECT3, TARGET_ATTACK_EFFECT4, TARGET_ATTACK_EFFECT5, 
		USER1, USER2, USER3, USER4, USER5, 
		USER_EFFECT1, USER_EFFECT2, USER_EFFECT3, USER_EFFECT4, USER_EFFECT5, 
		USER_ATTACK1, USER_ATTACK2, USER_ATTACK3, USER_ATTACK4, USER_ATTACK5, 
		USER_ATTACK_EFFECT1, USER_ATTACK_EFFECT2, USER_ATTACK_EFFECT3, USER_ATTACK_EFFECT4, USER_ATTACK_EFFECT5, 
		TARGET_ATTACK1, TARGET_ATTACK2, TARGET_ATTACK3, TARGET_ATTACK4, TARGET_ATTACK5, 
		sizeof_enum,
	};	
	eOBJECT& operator++(eOBJECT& object);

	//*************
	// イベント
	//*************
	enum class eEVENT
	{
		enum_zero,
		TITLE,
		// MISSIONの状態遷移は3パターンある
		// 1. コンテニューせずクリア
		// CREATE -> RUN -> CLEAR -> CREATE -> RUN -> ALL_CLEAR -> SAVE_REPLAY -> FINALIZE
		// 2. コンテニューしてクリア
		// CREATE -> RUN -> CONTINUE -> CLEAR -> CREATE -> RUN -> ALL_CLEAR -> FINALIZE
		// 3. コンテニューせず諦める
		// CREATE -> RUN -> CONTINUE -> OVER -> FINALIZE
		OPENING_LOAD, OPENING_RUN, OPENING_DELETE,
		ENDING_LOAD, ENDING_RUN, ENDING_DELETE, 
		MISSION_CREATE, MISSION_RUN, MISSION_CONTINUE, MISSION_OVER, MISSION_CLEAR, MISSION_COMPLETE, MISSION_DELETE,
		MISSION_REPLAY_CREATE, MISSION_REPLAY_RUN, MISSION_REPLAY_END, MISSION_REPLAY_CLEAR, MISSION_REPLAY_COMPLETE, MISSION_REPLAY_DELETE,
		REPLAY_SAVE, NOT_REPLAY_SAVE, 
		WINDOW_CLOSE,
		sizeof_enum,
	};

	//************
	// スキル
	//************
	enum class eSKILL
	{
			enum_zero, 
			Q, W, E, R, 
			sizeof_enum,
	};
	eSKILL& operator++(eSKILL& enum_skill);

}



